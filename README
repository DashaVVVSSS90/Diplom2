Автоматизация теста к API

Задание
Автоматизирован сценарий, который подготовили коллеги-тестировщики:
Клиент создает заказ.
Проверяется, что по треку заказа можно получить данные о заказе.
Шаги автотеста:
1 Выполняется запрос на создание заказа.
2 Сохраняется номер трека заказа.
3 Выполняется запрос на получения заказа по треку заказа.
4 Проверяется, что код ответа равен 200.
Проект состоит из следующих файлов:
config.py - Адреса тестового стенда, а также эндпоинтов
data.py - Данные для авторизации и запросов
stand_requests.py - Код для работы со стендом
.gitignore - Служебный файл Git
README.md - Файл, который Вы сейчас читаете
SQL 1 - Решение первого задания SQL
SQL 2 - Решение второго задания SQL

Предусловия для выполнения автотестов:
Для запуска тестов должны быть установлены пакеты pytest и requests
Запуск всех тестов выполянется командой pytest

Работа с базой данных
Задание 1
Представь: тебе нужно проверить, отображается ли созданный заказ в базе данных.
Для этого: выведи список логинов курьеров с количеством их заказов в статусе «В доставке» (поле inDelivery = true). 
Задание 2
Ты тестируешь статусы заказов. Нужно убедиться, что в базе данных они записываются корректно.
Для этого: выведи все трекеры заказов и их статусы. 
Статусы определяются по следующему правилу:
Если поле finished == true, то вывести статус 2.
Если поле canсelled == true, то вывести статус -1.
Если поле inDelivery == true, то вывести статус 1.
Для остальных случаев вывести 0.
Технические примечания:
Доступ к базе осуществляется с помощью команды psql -U morty -d scooter_rent. Пароль: smith.
У psql есть особенность: если таблица в базе данных с большой буквы, 
то её в запросе нужно брать в кавычки. Например, select * from "Orders".

